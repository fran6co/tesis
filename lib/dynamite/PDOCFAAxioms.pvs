
PDOCFAAxioms: THEORY 
 BEGIN
	IMPORTING PDOCFADefinitions
	BA_1 : AXIOM (FORALL (x: Carrier) :  ( sum(x,x) = x ) )
	AUTO_REWRITE+ BA_1
	BA_2 : AXIOM (FORALL (x: Carrier) :  ( product(x,x) = x ) )
	BA_3 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( sum(x,y) = sum(y,x) ) )
	BA_4 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( product(x,y) = product(y,x) ) )
	BA_5 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( sum(x,sum(y,z)) = sum(sum(x,y),z) ) )
	BA_6 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( product(x,product(y,z)) = product(product(x,y),z) ) )
	BA_7 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( sum(x,product(x,y)) = x ) )
	BA_8 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( product(x,sum(x,y)) = x ) )
	BA_9 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( product(x,sum(y,z)) = sum(product(x,y),product(x,z)) ) )
	BA_10 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( sum(x,product(y,z)) = product(sum(x,y),sum(x,z)) ) )
	BA_11 : AXIOM (FORALL (x: Carrier) :  ( product(x,zero) = zero ) )
	BA_12 : AXIOM (FORALL (x: Carrier) :  ( sum(x,one) = one ) )
	BA_13 : AXIOM (FORALL (x: Carrier) :  ( product(x,complement(x)) = zero ) )
	BA_14 : AXIOM (FORALL (x: Carrier) :  ( sum(x,complement(x)) = one ) )
	RA_1 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( composition(x,composition(y,z)) = composition(composition(x,y),z) ) )
	RA_2 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  ( composition(sum(x,y),z) = sum(composition(x,z),composition(y,z)) ) )
	RA_3 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( converse(sum(x,y)) = sum(converse(x),converse(y)) ) )
	RA_4 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( converse(composition(x,y)) = composition(converse(y),converse(x)) ) )
	RA_5 : AXIOM (FORALL (x: Carrier) :  ( converse(converse(x)) = x ) )
	RA_6 : AXIOM (FORALL (x: Carrier) :  ( composition(x,one_prime) = x ) )
	RA_7 : AXIOM (FORALL (x: Carrier, y: Carrier, z: Carrier) :  (  (  ( product(composition(x,y),z) = zero )  IFF  ( product(composition(z,converse(y)),x) = zero )  )  AND  (  ( product(composition(z,converse(y)),x) = zero )  IFF  ( product(composition(converse(x),z),y) = zero )  )  ) )
	FA_1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( fork(x,y) = product(composition(x,fork(one_prime,one)),composition(y,fork(one,one_prime))) ) )
	FA_2 : AXIOM (FORALL (w: Carrier, x: Carrier, y: Carrier, z: Carrier) :  ( composition(fork(w,x),converse(fork(y,z))) = product(composition(w,converse(y)),composition(x,converse(z))) ) )
	FA_3 : AXIOM  ( sum(fork(converse(fork(one_prime,one)),converse(fork(one,one_prime))),one_prime) = one_prime ) 
	PointDensity : AXIOM (FORALL (x: Carrier) :  (  ( Some(x) AND Leq(x,one_prime) )  IMPLIES (EXISTS (p: Carrier) :  ( atom(p) AND Leq(p,x) ) ) ) )
	GCOMPOSITION_1 : AXIOM (FORALL (x: Carrier) :  ( generalizedComposition(x,0) = one_prime ) )
	GCOMPOSITION_2 : AXIOM (FORALL (x: Carrier) : (FORALL (i: nat) :  ( generalizedComposition(x, ( i + 1 ) ) = composition(x,generalizedComposition(x,i)) ) ))
	GCROSS_1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( generalizedCross(x,y,0) = y ) )
	GCROSS_2 : AXIOM (FORALL (x: Carrier, y: Carrier) : (FORALL (i: nat) :  ( generalizedCross(x,y, ( i + 1 ) ) = Cross(x,generalizedCross(x,y,i)) ) ))
	Nav1on2 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 1 )  AND  ( rank(y) = 2 )  )  IMPLIES  ( Navigation(x,y) = Ran(composition(x,y)) )  ) )
	Nav1onMoreThan2 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 1 )  AND  ( rank(y) > 2 )  )  IMPLIES  ( Navigation(x,y) = composition(converse(Pi),composition(Ran(composition(x,y)),Rho)) )  ) )
	Nav2on1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 2 )  AND  ( rank(y) = 1 )  )  IMPLIES  ( Navigation(x,y) = Dom(composition(x,y)) )  ) )
	Nav2onMoreThan1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 2 )  AND  ( rank(y) > 1 )  )  IMPLIES  ( Navigation(x,y) = composition(x,y) )  ) )
	NavMoreThan2on1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) > 2 )  AND  ( rank(y) = 1 )  )  IMPLIES  ( Navigation(x,y) = composition(x,generalizedCross(one_prime,composition(Cross(one_prime,y),Pi), ( rank(x) - 3 ) )) )  ) )
	NavMoreThan2onMoreThan1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) > 2 )  AND  ( rank(y) > 1 )  )  IMPLIES  ( Navigation(x,y) = composition(x,generalizedCross(one_prime,y, ( rank(x) - 2 ) )) )  ) )
	RankNotZero : AXIOM (FORALL (x: Carrier) :  ( rank(x) > 0 ) )
	IdenRank : AXIOM  ( rank(iden) = 2 ) 
	UnivRank : AXIOM  ( rank(univ) = 1 ) 
	CP1on1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 1 )  AND  ( rank(y) = 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(composition(x,one),y) )  ) )
	CP1onMoreThan1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 1 )  AND  ( rank(y) > 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(composition(x,one),fork(one_prime,y)) )  ) )
	CP2on1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 2 )  AND  ( rank(y) = 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(converse(Pi),Cross(x,y)) )  ) )
	CP2onMoreThan1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) = 2 )  AND  ( rank(y) > 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(Pi,Cross(x,fork(one_prime,y))) )  ) )
	CPMoreThan2on1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) > 2 )  AND  ( rank(y) = 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(x,composition(converse(Pi),fork(one_prime,y))) )  ) )
	CPMoreThan2onMoreThan1 : AXIOM (FORALL (x: Carrier, y: Carrier) :  (  (  ( rank(x) > 2 )  AND  ( rank(y) > 1 )  )  IMPLIES  ( CartesianProduct(x,y) = composition(x,composition(converse(Pi),Cross(one_prime,Ran(fork(one_prime,y))))) )  ) )
	RankCartesianProuct : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( rank(CartesianProduct(x,y)) =  ( rank(x) + rank(y) )  ) )
	RankNavigation : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( rank(Navigation(x,y)) =  (  ( rank(x) + rank(y) )  - 2 )  ) )
	RankTransitiveClosure : AXIOM (FORALL (x: Carrier) :  ( rank(TC(x)) = rank(x) ) )
	RankReflexiveTransitiveClosure : AXIOM (FORALL (x: Carrier) :  ( rank(RTC(x)) = rank(x) ) )
	RankConverse : AXIOM (FORALL (x: Carrier) :  ( rank(converse(x)) = rank(x) ) )
	RankProduct : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( rank(product(x,y)) = rank(x) ) )
	RankSum : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( rank(sum(x,y)) = rank(x) ) )
	RankMinus : AXIOM (FORALL (x: Carrier, y: Carrier) :  ( rank(minus(x,y)) = rank(x) ) )
END PDOCFAAxioms
